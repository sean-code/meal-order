{"ast":null,"code":"var _jsxFileName = \"/home/dyes/Development/code/phase-3/meal-order/src/App.js\";\nimport './App.css';\nimport Header from './components/header/header';\nimport Menu from './components/menu/menu';\nimport Search from './components/search/search';\nimport searchBar from './components/search/search';\nimport Home from './components/home/home';\nimport Login from './components/login/login';\n\n// function App() {\n\n//   return (\n//     <div className=\"App\">\n//       <Search/>\n\n//       {/* {data.map((res) => (\n//         <h1>{res.name.common}</h1>\n//       ))} */}\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  return _s(function App() {\n    _s();\n    const [errorMessages, setErrorMessages] = useState({});\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    // User Login info\n    const database = [{\n      username: \"user1\",\n      password: \"pass1\"\n    }, {\n      username: \"user2\",\n      password: \"pass2\"\n    }];\n    const errors = {\n      uname: \"invalid username\",\n      pass: \"invalid password\"\n    };\n    const handleSubmit = event => {\n      //Prevent page reload\n      event.preventDefault();\n      var {\n        uname,\n        pass\n      } = document.forms[0];\n\n      // Find user login info\n      const userData = database.find(user => user.username === uname.value);\n\n      // Compare user info\n      if (userData) {\n        if (userData.password !== pass.value) {\n          // Invalid password\n          setErrorMessages({\n            name: \"pass\",\n            message: errors.pass\n          });\n        } else {\n          setIsSubmitted(true);\n        }\n      } else {\n        // Username not found\n        setErrorMessages({\n          name: \"uname\",\n          message: errors.uname\n        });\n      }\n    };\n\n    // Generate JSX code for error message\n    const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errorMessages.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n\n    // JSX code for login form\n    const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"uname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), renderErrorMessage(\"uname\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"pass\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), renderErrorMessage(\"pass\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"User is successfully logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 24\n        }, this) : renderForm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n}\n_c = App;\nexport default App;\n\n// const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n\n//   // User Login info\n//   const database = [\n//     {\n//       username: \"user1\",\n//       password: \"pass1\"\n//     },\n//     {\n//       username: \"user2\",\n//       password: \"pass2\"\n//     }\n//   ];\n\n//   const errors = {\n//     uname: \"invalid username\",\n//     pass: \"invalid password\"\n//   };\n\n//   const handleSubmit = (event) => {\n//     //Prevent page reload\n//     event.preventDefault();\n\n//     var { uname, pass } = document.forms[0];\n\n//     // Find user login info\n//     const userData = database.find((user) => user.username === uname.value);\n\n//     // Compare user info\n//     if (userData) {\n//       if (userData.password !== pass.value) {\n//         // Invalid password\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\n//       } else {\n//         setIsSubmitted(true);\n//       }\n//     } else {\n//       // Username not found\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\n//     }\n//   };\n\n//   // Generate JSX code for error message\n//   const renderErrorMessage = (name) =>\n//     name === errorMessages.name && (\n//       <div className=\"error\">{errorMessages.message}</div>\n//     );\n\n//   // JSX code for login form\n//   const renderForm = (\n//     <div className=\"form\">\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"input-container\">\n//           <label>Username </label>\n//           <input type=\"text\" name=\"uname\" required />\n//           {renderErrorMessage(\"uname\")}\n//         </div>\n//         <div className=\"input-container\">\n//           <label>Password </label>\n//           <input type=\"password\" name=\"pass\" required />\n//           {renderErrorMessage(\"pass\")}\n//         </div>\n//         <div className=\"button-container\">\n//           <input type=\"submit\" />\n//         </div>\n//       </form>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"login-form\">\n//         <div className=\"title\">Sign In</div>\n//         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//       </div>\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Menu","Search","searchBar","Home","Login","App","errorMessages","setErrorMessages","useState","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"sources":["/home/dyes/Development/code/phase-3/meal-order/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/header/header';\nimport Menu from './components/menu/menu';\nimport Search from './components/search/search';\nimport searchBar from './components/search/search';\n\nimport Home from './components/home/home';\nimport Login from './components/login/login';\n\n// function App() {\n  \n//   return (\n//     <div className=\"App\">\n//       <Search/>\n  \n      \n//       {/* {data.map((res) => (\n//         <h1>{res.name.common}</h1>\n//       ))} */}\n//     </div>\n//   );\n// }\n\n\nfunction App() {\n  \n  return (\n    function App() {\n\n\n      const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // User Login info\n  const database = [\n    {\n      username: \"user1\",\n      password: \"pass1\"\n    },\n    {\n      username: \"user2\",\n      password: \"pass2\"\n    }\n  ];\n\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = (event) => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, pass } = document.forms[0];\n\n    // Find user login info\n    const userData = database.find((user) => user.username === uname.value);\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n    }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n    );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Username </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"button-container\">\n          <input type=\"submit\" />\n        </div>\n      </form>\n    </div>\n  );\n  \n      return (\n\n\n        \n        <div className=\"App\">\n          <div className=\"login-form\">\n          <div className=\"title\">Sign In</div>\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n        </div>\n          {/* <Search/>\n          <Header/>\n          <Search/> */}\n      \n          \n          {/* {data.map((res) => (\n            <h1>{res.name.common}</h1>\n          ))} */}\n        </div>\n      );\n    }\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n// const [errorMessages, setErrorMessages] = useState({});\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n\n//   // User Login info\n//   const database = [\n//     {\n//       username: \"user1\",\n//       password: \"pass1\"\n//     },\n//     {\n//       username: \"user2\",\n//       password: \"pass2\"\n//     }\n//   ];\n\n//   const errors = {\n//     uname: \"invalid username\",\n//     pass: \"invalid password\"\n//   };\n\n//   const handleSubmit = (event) => {\n//     //Prevent page reload\n//     event.preventDefault();\n\n//     var { uname, pass } = document.forms[0];\n\n//     // Find user login info\n//     const userData = database.find((user) => user.username === uname.value);\n\n//     // Compare user info\n//     if (userData) {\n//       if (userData.password !== pass.value) {\n//         // Invalid password\n//         setErrorMessages({ name: \"pass\", message: errors.pass });\n//       } else {\n//         setIsSubmitted(true);\n//       }\n//     } else {\n//       // Username not found\n//       setErrorMessages({ name: \"uname\", message: errors.uname });\n//     }\n//   };\n\n//   // Generate JSX code for error message\n//   const renderErrorMessage = (name) =>\n//     name === errorMessages.name && (\n//       <div className=\"error\">{errorMessages.message}</div>\n//     );\n\n//   // JSX code for login form\n//   const renderForm = (\n//     <div className=\"form\">\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"input-container\">\n//           <label>Username </label>\n//           <input type=\"text\" name=\"uname\" required />\n//           {renderErrorMessage(\"uname\")}\n//         </div>\n//         <div className=\"input-container\">\n//           <label>Password </label>\n//           <input type=\"password\" name=\"pass\" required />\n//           {renderErrorMessage(\"pass\")}\n//         </div>\n//         <div className=\"button-container\">\n//           <input type=\"submit\" />\n//         </div>\n//       </form>\n//     </div>\n//   );\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"login-form\">\n//         <div className=\"title\">Sign In</div>\n//         {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n//       </div>\n//     </div>\n//   );\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}